diff --git a/node_modules/react-native-code-push/android/codepush.gradle b/node_modules/react-native-code-push/android/codepush.gradle
index a0f9d27..d5cc650 100644
--- a/node_modules/react-native-code-push/android/codepush.gradle
+++ b/node_modules/react-native-code-push/android/codepush.gradle
@@ -1,9 +1,12 @@
 // Adapted from https://raw.githubusercontent.com/facebook/react-native/d16ff3bd8b92fa84a9007bf5ebedd8153e4c089d/react.gradle
 
+// @ahmedrowaihi | Problem: No signature of method: java.util.ArrayList.get()
+// solution: remove the get() method when accessing the arraylist, since get() expects an index
+
 import java.nio.file.Paths;
 
 def config = project.extensions.findByName("react") ?: []
-def bundleAssetName = config.bundleAssetName.get() ?: "index.android.bundle"
+def bundleAssetName = config.bundleAssetName ?: "index.android.bundle"
 
 // because elvis operator
 def elvisFile(thing) {
@@ -24,7 +27,7 @@ android.buildTypes.each { buildType ->
 }
 
 gradle.projectsEvaluated {
-    def debuggableVariants = config.debuggableVariants.get() ?: ['debug']
+    def debuggableVariants = config.debuggableVariants ?: ['debug']
 
     android.applicationVariants.all { variant ->
         // No code push for debuggable variants
@@ -34,7 +37,7 @@ gradle.projectsEvaluated {
 
         def nodeModulesPath;
         if (config.root) {
-            nodeModulesPath = Paths.get(config.root.asFile.get().absolutePath, "/node_modules");
+            nodeModulesPath = Paths.get(config.root.asFile.absolutePath, "/node_modules");
         } else if (project.hasProperty('nodeModulesPath')) {
             nodeModulesPath = project.nodeModulesPath
         } else {
@@ -49,8 +52,8 @@ gradle.projectsEvaluated {
         def jsBundleFile;
 
         // Additional node commandline arguments
-        def nodeExecutableAndArgs = config.nodeExecutableAndArgs.get() ?: ["node"]
-        def extraPackagerArgs = config.extraPackagerArgs.get() ?: []
+        def nodeExecutableAndArgs = config.nodeExecutableAndArgs ?: ["node"]
+        def extraPackagerArgs = config.extraPackagerArgs ?: []
 
         // Make this task run right after the bundle task
         def generateBundledResourcesHash;
@@ -73,11 +76,11 @@ gradle.projectsEvaluated {
             runBefore("merge${targetName}Assets", generateBundledResourcesHash)
         } else {
             def jsBundleDirConfigName = "jsBundleDir${targetName}"
-            jsBundleDir = elvisFile(config."$jsBundleDirConfigName").get() ?:
+            jsBundleDir = elvisFile(config."$jsBundleDirConfigName") ?:
                     file("$buildDir/intermediates/assets/${targetPath}")
 
             def resourcesDirConfigName = "resourcesDir${targetName}"
-            resourcesDir = elvisFile(config."${resourcesDirConfigName}").get() ?:
+            resourcesDir = elvisFile(config."${resourcesDirConfigName}") ?:
                     file("$buildDir/intermediates/res/merged/${targetPath}")
 
             // In case version of 'Android Plugin for Gradle'' is lower than 1.3.0